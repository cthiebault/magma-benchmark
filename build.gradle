apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'artifactory-publish'
apply plugin: 'idea'
apply plugin: 'project-report'
apply plugin: 'application'
apply plugin: 'versions'

ext {
  magmaVersion = '1.8-SNAPSHOT'
  slf4jVersion = '1.7.5'
}

group = 'org.obiba.magma'

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

buildscript {
  repositories {
    maven { url 'http://repo.obiba.org/obiba-gradle-plugins-release' }
  }
  dependencies {
    classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:2.1.0'
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.4'
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.6'
}

defaultTasks 'build'

mainClassName = 'org.obiba.magma.benchmark.MagmaBenchmark'

configurations {
  pmd
  compile
  runtime
  all*.exclude group: 'commons-logging'
}

dependencies {
  compile('com.google.code.findbugs:jsr305:2.0.1')
  compile('com.google.code.gson:gson:2.2.4')
  compile('com.google.guava:guava:15.0')
  compile('javassist:javassist:3.12.1.GA')
  compile('org.hsqldb:hsqldb:2.3.0')
  compile('mysql:mysql-connector-java:5.1.26')
  compile('net.sourceforge.findbugs:annotations:1.3.2')

  // http://java.dzone.com/articles/deploying-artifact-local-cache
  compile("org.obiba.magma:magma-api:${magmaVersion}") { changing = true }
  compile("org.obiba.magma:magma-data-generator:${magmaVersion}") { changing = true }
  compile("org.obiba.magma:magma-hibernate-datasource:${magmaVersion}") { changing = true }
  compile("org.obiba.magma:magma-datasource-jdbc:${magmaVersion}") { changing = true }
  compile("org.obiba.magma:magma-datasource-mongodb:${magmaVersion}") { changing = true }

  compile("org.slf4j:slf4j-api:${slf4jVersion}")
  compile("org.slf4j:slf4j-log4j12:${slf4jVersion}")
  compile("org.slf4j:jcl-over-slf4j:${slf4jVersion}")

  compile('org.springframework:spring-orm:3.2.4.RELEASE')
  compile('org.springframework.batch:spring-batch-core:2.2.2.RELEASE') {
    exclude group: 'com.thoughtworks.xstream'
  }

  testCompile('junit:junit:4.11')
}

test {
  testLogging.showStandardStreams = true
}


repositories {
  mavenLocal()
  maven { url 'http://repo.obiba.org/repo' }
  mavenCentral()
}

tasks.withType(Compile) {
  options.encoding = 'UTF-8'
}

jar {
  manifest {
    attributes 'Implementation-Title': project.name,
        'Implementation-Version': project.version,
        'Implementation-Vendor-Id': project.group,
        'Implementation-Vendor': 'OBiBa'
  }
}

// create jar with sources
task packageSources(type: Jar, dependsOn: compileJava) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

// create jar with javadoc
task packageJavadoc(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

// configure publication tu upload binary, POM.xml, sources & javadoc
publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      pom.withXml {
        def Node root = asNode();
        root.appendNode('name', 'magma-benchmark')
        root.appendNode('description', 'Benchmark for Magma Datasources')
        root.appendNode('url', 'http://www.obiba.org')

        def org = root.appendNode('organization')
        org.appendNode('name', 'OBiBa')
        org.appendNode('url', 'http://www.obiba.org')

        def issues = root.appendNode('issueManagement')
        issues.appendNode('system', 'jira')
        issues.appendNode('url', 'http://jira.obiba.org/jira/browse/MAGMA')

        def scm = root.appendNode('scm')
        scm.appendNode('url', 'https://github.com/obiba/magma')
        scm.appendNode('connection', 'scm:git:git://github.com/obiba/magma.git')
        scm.appendNode('developerConnection', 'scm:git:git://github.com/obiba/magma.git')

        def license = root.appendNode('licenses').appendNode('license');
        license.appendNode('name', 'GNU Public License version 3')
        license.appendNode('url', 'http://www.obiba.org/node/62')
        license.appendNode('distribution', 'repo')
      }
      artifact packageSources {
        classifier "sources"
      }
      artifact packageJavadoc {
        classifier "javadoc"
      }
    }
  }
}

// configure artifactory plugin
artifactory {
  contextUrl = 'http://repo.obiba.org'
  publish {
    repository {
      // these settings are overridden by Artifactory Jenkins plugin
      repoKey = 'libs-snapshot-local'
      username = 'user'
      password = 'password'
    }
    defaults {
      publications('mavenJava')
    }
  }
  resolve {
    contextUrl = 'http://repo.obiba.org'
    repository {
      repoKey = 'libs-releases'
    }
  }
}
