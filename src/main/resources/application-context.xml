<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

  <context:annotation-config/>
  <context:component-scan base-package="org.obiba.magma"/>

  <util:properties id="mysql" location="jdbc-mysql.properties"/>
  <util:properties id="hsql" location="jdbc-hsql.properties"/>
  <util:properties id="mongo" location="mongodb.properties"/>

  <bean id="transactionManager"
      class="org.springframework.batch.support.transaction.ResourcelessTransactionManager">
  </bean>

  <bean id="jobRepository"
      class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
    <property name="transactionManager" ref="transactionManager"/>
  </bean>

  <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
    <property name="jobRepository" ref="jobRepository"/>
    <property name="taskExecutor">
      <bean class="org.springframework.core.task.SimpleAsyncTaskExecutor"/>
    </property>
  </bean>

  <job id="benchmarkJob" xmlns="http://www.springframework.org/schema/batch">
    <step id="generateVariableStep" next="importSingleTableStep">
      <tasklet ref="variableRepository"/>
    </step>
    <step id="importSingleTableStep">
      <tasklet>
        <chunk reader="benchmarkItemReader" processor="benchmarkProcessor" writer="resultsWriter" commit-interval="1"/>
      </tasklet>
    </step>
  </job>

  <bean name="benchmarkItemReader"
      class="org.springframework.batch.item.file.FlatFileItemReader">
    <property name="resource" value="classpath:jobs.csv"/>
    <property name="comments" value="#"/>
    <property name="lineMapper">
      <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
        <property name="lineTokenizer">
          <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
            <property name="delimiter" value=","/>
            <property name="names" value="datasource,flavor,nbEntities"/>
          </bean>
        </property>
        <property name="fieldSetMapper">
          <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
            <property name="targetType" value="org.obiba.magma.benchmark.BenchmarkItem"/>
          </bean>
        </property>
      </bean>
    </property>
    <!-- skip the header -->
    <property name="linesToSkip" value="1"/>
  </bean>

  <bean id="resultsWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
    <!--suppress SpringModelInspection -->
    <property name="resource" value="file:results.csv"/>
    <property name="lineAggregator">
      <bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator"/>
    </property>
    <property name="headerCallback">
      <bean class="org.obiba.magma.benchmark.ResultsHeaderCallback"/>
    </property>
  </bean>

  <bean id="benchmarkProcessor" class="org.obiba.magma.benchmark.BenchmarkProcessor"/>

</beans>