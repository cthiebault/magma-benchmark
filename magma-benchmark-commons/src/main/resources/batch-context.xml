<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:batch="http://www.springframework.org/schema/batch"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">


  <bean id="batchDataSource" class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean" init-method="init"
      destroy-method="close">
    <property name="uniqueResourceName" value="batch-datasource"/>
    <property name="url" value="jdbc:hsqldb:file:build/batch.db;shutdown=true"/>
    <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
    <property name="user" value="sa"/>
    <property name="password" value=""/>
    <property name="minPoolSize" value="3"/>
    <property name="poolSize" value="50"/>
  </bean>

  <jdbc:initialize-database data-source="batchDataSource">
    <jdbc:script location="classpath:org/springframework/batch/core/schema-drop-hsqldb.sql"/>
    <jdbc:script location="classpath:org/springframework/batch/core/schema-hsqldb.sql"/>
  </jdbc:initialize-database>

  <batch:job-repository id="jobRepository" data-source="batchDataSource" transaction-manager="transactionManager"/>

  <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
    <property name="jobRepository" ref="jobRepository"/>
    <property name="taskExecutor">
      <bean class="org.springframework.core.task.SimpleAsyncTaskExecutor"/>
    </property>
  </bean>

  <job id="benchmarkJob" xmlns="http://www.springframework.org/schema/batch">
    <step id="generateVariableStep" next="importSingleTableStep">
      <tasklet ref="variableRepository"/>
    </step>
    <step id="importSingleTableStep">
      <tasklet>
        <chunk reader="benchmarkItemReader" processor="benchmarkProcessor" writer="resultsWriter" commit-interval="1"/>
      </tasklet>
    </step>
  </job>

  <bean name="benchmarkItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
    <property name="resource" value="classpath:jobs.csv"/>
    <property name="comments" value="#"/>
    <property name="lineMapper">
      <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
        <property name="lineTokenizer">
          <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
            <property name="delimiter" value=","/>
            <property name="names" value="datasource,flavor,nbEntities"/>
          </bean>
        </property>
        <property name="fieldSetMapper">
          <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
            <property name="targetType" value="org.obiba.magma.benchmark.BenchmarkItem"/>
          </bean>
        </property>
      </bean>
    </property>
    <!-- skip the header -->
    <property name="linesToSkip" value="1"/>
  </bean>

  <bean id="csvWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
    <!--suppress SpringModelInspection -->
    <property name="resource" value="file:results/benchmark-results.csv"/>
    <property name="lineAggregator">
      <bean class="org.obiba.magma.benchmark.writer.CsvLineAggregator"/>
    </property>
    <property name="headerCallback">
      <bean class="org.obiba.magma.benchmark.writer.CsvHeaderCallback"/>
    </property>
  </bean>

  <bean id="jsonHeaderFooterCallback" class="org.obiba.magma.benchmark.writer.JsonHeaderFooterCallback"/>

  <bean id="jsonWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
    <!--suppress SpringModelInspection -->
    <property name="resource" value="file:results/benchmark-results.js"/>
    <property name="lineAggregator">
      <bean class="org.obiba.magma.benchmark.writer.JsonLineAggregator"/>
    </property>
    <property name="lineSeparator" value=","/>
    <property name="headerCallback" ref="jsonHeaderFooterCallback"/>
    <property name="footerCallback" ref="jsonHeaderFooterCallback"/>
  </bean>

  <bean id="resultsWriter" class="org.obiba.magma.benchmark.writer.MultipleItemWriter">
    <property name="writers">
      <list>
        <ref bean="csvWriter"/>
        <ref bean="jsonWriter"/>
      </list>
    </property>
  </bean>

  <bean id="benchmarkProcessor" class="org.obiba.magma.benchmark.BenchmarkProcessor"/>

</beans>